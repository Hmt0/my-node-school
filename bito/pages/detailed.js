import Head from 'next/head'
import Header from '../components/Header'
import { Breadcrumb, List } from 'antd'
import MarkNav from 'markdown-navbar'
import React, {useState} from "react" 
import axios from 'axios'
import { marked } from 'marked'
import hljs from 'highlight.js'
import 'highlight.js/styles/monokai-sublime.css'
import 'markdown-navbar/dist/navbar.css';


function Detailed(props) {
  const renderer = new marked.Renderer()

  marked.setOptions({
    renderer: renderer,
    gfm:true,
    pedantic: false,
    sanitize: false,
    tables: true,
    breaks: false,
    smartLists: true,
    highlight: function(code) {
      return hljs.highlightAuto(code).value
    }
  })

  let html = marked(props.article_content)
  const article = `# Markdown-Navbar Demo
 
  ## Chicken Chicken
  
  Chicken Chicken Chicken Chicken Chicken.
  
  * Chicken Chicken Chicken Chicken Chicken.
  * Chicken Chicken Chicken Chicken Chicken.
  * Chicken Chicken Chicken Chicken Chicken.
  
  ### Chicken Chicken Chicken
  
  Chicken Chicken Chicken Chicken Chicken.
  
  #### Chicken Chicken Chicken Chicken
  
  Chicken Chicken Chicken Chicken Chicken Chicken.`;
  let html2 = marked(article)
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bread-div">
          <Breadcrumb>
            <Breadcrumb.Item><a href="/">首页</a></Breadcrumb.Item>
            <Breadcrumb.Item>视频列表</Breadcrumb.Item>
          </Breadcrumb>
      </div>
      <main>
        <Header />
        <div>
          <MarkNav source = {props.article_content}/>
        </div>
        
        <div dangerouslySetInnerHTML={{__html:html2}} />
        <div dangerouslySetInnerHTML={{__html:html}}/>

      </main>
    </div>
  )
}

Detailed.getInitialProps = async (context)=>{
  console.log(context.query.id)

  let id = context.query.id

  const promise = new Promise((resolve)=>{
    axios('http://127.0.0.1:7001/default/getArticleById/' + id).then(
      (res)=>{
        resolve(res.data.data[0])
      }
    )
  })

  return await promise
}

export default Detailed